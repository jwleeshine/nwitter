{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","email","setEmail","useState","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","_jsxs","_Fragment","children","onSubmit","async","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","_jsx","type","placeholder","required","onClick","toggleAccount","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","FontAwesomeIcon","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","_ref","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","text","toggleEditing","doc","id","update","autoFocus","attachmentUrl","src","width","height","window","confirm","delete","refFromURL","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","response","putString","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","onLogOutClick","signOut","push","Navigation","display","justifyContent","Link","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","Router","Switch","maxWidth","margin","Route","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e16dadd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    \r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            {/* <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add Photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__atachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )} */}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from  \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);"],"sourceRoot":""}