{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","email","setEmail","useState","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","_jsxs","_Fragment","children","onSubmit","async","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","_jsx","type","placeholder","required","onClick","toggleAccount","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","_ref","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","text","toggleEditing","doc","id","update","attachmentUrl","src","width","height","window","confirm","delete","refFromURL","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","response","putString","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","onClearAttachment","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","onLogOutClick","signOut","push","Navigation","Link","to","AppRouter","isLoggedIn","Router","Switch","Route","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.943bd54a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    \r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            {/* <input type=\"file\" accept=\"image/*\" onChange={onFileChange} /> */}\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from  \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);"],"sourceRoot":""}